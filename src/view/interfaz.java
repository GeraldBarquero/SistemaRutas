/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import bl.Grafo;
import bl.Metodos;
import bl.algoritmoDisjktra;
import domain.Ruta;
import domain.Vertice;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author gbarquero
 */
public class interfaz extends javax.swing.JFrame {

    Metodos metodo = new Metodos();
    Vertice inicio = null;
    Vertice fin = null;

    /**
     * Creates new form interfaz
     */
    public interfaz() {
        initComponents();
        iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cb_verticeInicio = new javax.swing.JComboBox();
        cb_verticeFinal = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        panelGrafo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jb_buscarRuta = new javax.swing.JButton();
        jTf_ejeX = new javax.swing.JTextField();
        jTf_ejeY = new javax.swing.JTextField();
        jb_cargarGrafo = new javax.swing.JButton();
        bt_deleteVertice = new javax.swing.JButton();
        bt_deleteArista = new javax.swing.JButton();
        bt_updateVertice = new javax.swing.JButton();
        bt_updateArista = new javax.swing.JButton();
        jb_nuevoVertice = new javax.swing.JToggleButton();
        jb_nuevaArista = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cb_verticeInicio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cb_verticeFinal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setToolTipText("");
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        panelGrafo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mapaFondo.png"))); // NOI18N
        panelGrafo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelGrafoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGrafo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGrafo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelGrafo.getAccessibleContext().setAccessibleName("Lb_Fondo");

        jb_buscarRuta.setText("Buscar ruta");
        jb_buscarRuta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_buscarRutaMouseClicked(evt);
            }
        });

        jb_cargarGrafo.setText("Cargar grafo");
        jb_cargarGrafo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_cargarGrafoMouseClicked(evt);
            }
        });

        bt_deleteVertice.setText("Eliminar Vertice");
        bt_deleteVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_deleteVerticeActionPerformed(evt);
            }
        });

        bt_deleteArista.setText("Eliminar Arista");
        bt_deleteArista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_deleteAristaMouseClicked(evt);
            }
        });

        bt_updateVertice.setText("Actualizar Vertice");
        bt_updateVertice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_updateVerticeMouseClicked(evt);
            }
        });

        bt_updateArista.setText("Actualizar Arista");
        bt_updateArista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_updateAristaMouseClicked(evt);
            }
        });

        jb_nuevoVertice.setText("Nuevo Vertice");

        jb_nuevaArista.setText("Nueva Arista");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTf_ejeX, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cb_verticeInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(cb_verticeFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTf_ejeY, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jb_cargarGrafo)
                                .addComponent(jb_buscarRuta))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt_deleteVertice)
                            .addComponent(bt_deleteArista)
                            .addComponent(bt_updateVertice)
                            .addComponent(bt_updateArista)
                            .addComponent(jb_nuevoVertice)
                            .addComponent(jb_nuevaArista))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_verticeInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_verticeFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTf_ejeX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTf_ejeY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_buscarRuta)
                .addGap(13, 13, 13)
                .addComponent(jb_cargarGrafo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jb_nuevoVertice)
                .addGap(31, 31, 31)
                .addComponent(jb_nuevaArista)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_deleteArista)
                .addGap(39, 39, 39)
                .addComponent(bt_deleteVertice)
                .addGap(45, 45, 45)
                .addComponent(bt_updateVertice)
                .addGap(41, 41, 41)
                .addComponent(bt_updateArista)
                .addGap(43, 43, 43))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_cargarGrafoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_cargarGrafoMouseClicked
        // TODO add your handling code here:
        limpiarPanel(1);
        metodo.reiniciar();
    }//GEN-LAST:event_jb_cargarGrafoMouseClicked

    private void bt_deleteAristaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_deleteAristaMouseClicked
        // TODO add your handling code here:
        String verticeInicio = JOptionPane.showInputDialog("Digite el nombre del vertice inicio de la arista que desea eliminar");
        String verticeFinal = JOptionPane.showInputDialog("Digite el nombre del vertice final de la arista que desea eliminar");
        inicio = metodo.buscarVertice(verticeInicio);
        fin = metodo.buscarVertice(verticeFinal);
        metodo.eliminarArista(inicio, fin);
        cargarComboBox();
        limpiarPanel(0);
    }//GEN-LAST:event_bt_deleteAristaMouseClicked

    private void bt_deleteVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_deleteVerticeActionPerformed
        // TODO add your handling code here:
        String vertice = JOptionPane.showInputDialog("Digite el nombre del vertice a eliminar");
        metodo.eliminarVertice(vertice);
        cargarComboBox();
        limpiarPanel(0);
    }//GEN-LAST:event_bt_deleteVerticeActionPerformed

    private void bt_updateVerticeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_updateVerticeMouseClicked
        // TODO add your handling code here:
        String actual = JOptionPane.showInputDialog("Digite el nombre del vertice que desea actualizar");
        String nuevo = JOptionPane.showInputDialog("Digite el nuevo nombre del vertice");
        metodo.actualizarVertice(actual, nuevo);
        cargarComboBox();
        limpiarPanel(0);
    }//GEN-LAST:event_bt_updateVerticeMouseClicked

    private void bt_updateAristaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_updateAristaMouseClicked
        // TODO add your handling code here:
        String verticeInicio = JOptionPane.showInputDialog("Digite el nombre del vertice inicio de la arista que desea actualizar");
        String verticeFinal = JOptionPane.showInputDialog("Digite el nombre del vertice final de la arista que desea actualizar");

        int pesoNuevo = Integer.parseInt(JOptionPane.showInputDialog("Digite el nuevo valor de la arista"));
        metodo.actualizarArista(metodo.buscarVertice(verticeInicio), metodo.buscarVertice(verticeFinal), pesoNuevo);
        limpiarPanel(0);
    }//GEN-LAST:event_bt_updateAristaMouseClicked

    private void panelGrafoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelGrafoMouseClicked
        // TODO add your handling code here:
        jTf_ejeX.setText(String.valueOf(evt.getX()));
        jTf_ejeY.setText(String.valueOf(evt.getY()));
        if (jb_nuevoVertice.isSelected()) {
            if (metodo.buscarVertice(evt.getX(), evt.getY()) == null) {
                String nombreVertice = JOptionPane.showInputDialog("Digite el nombre del vertice");
                metodo.crearVertice(nombreVertice, evt.getX(), evt.getY());
                jb_nuevoVertice.setSelected(false);
            }else{
                JOptionPane.showMessageDialog(this,"No se puede crear un vertice en las coordenadas donde ya existe uno");
            }
        } else if (jb_nuevaArista.isSelected()) {
            //metodo.crearArista("A", "B", 2);
            if (metodo.buscarVertice(evt.getX(), evt.getY()) != null) {
                if (inicio == null) {
                    inicio = metodo.buscarVertice(evt.getX(), evt.getY());
                } else {
                    fin = metodo.buscarVertice(evt.getX(), evt.getY());
                }
                if (inicio != null && fin != null) {
                    int peso = Integer.parseInt(JOptionPane.showInputDialog("Digite el peso de la arista"));
                    metodo.crearArista(inicio.getNombre(), fin.getNombre(), peso);
                    inicio = null;
                    fin = null;
                }
            }
            jb_nuevaArista.setSelected(false);
        }
        cargarComboBox();
        limpiarPanel(0);
        mandarDibujarAristas();
        mandarDibujarCirculos();
    }//GEN-LAST:event_panelGrafoMouseClicked

    private void jb_buscarRutaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_buscarRutaMouseClicked
        // TODO add your handling code here:
        metodo.reiniciar();
        String inicio = cb_verticeInicio.getSelectedItem().toString();
        String fin = cb_verticeFinal.getSelectedItem().toString();
        metodo.iniciarAlgoritmo(inicio, fin);
        limpiarPanel(0);
        
        
    }//GEN-LAST:event_jb_buscarRutaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfaz().setVisible(true);

            }
        });

    }

    private void iniciar() {
        crearVerticesInicio();
        crearAristasInicio();
    }

    public void limpiarPanel(int codigo) {
        /*ImageIcon fondo = new ImageIcon("../imagenes/mapaFondo.png");
        panelGrafo.getGraphics().clearRect(0, 0, getWidth(), getHeight());
        panelGrafo.getGraphics().drawImage(fondo.getImage(), 0, 0, 100, 100, null);*/
        panelGrafo.paint(panelGrafo.getGraphics());
        cargarComboBox();
        mandarDibujarAristas();
        mandarDibujarCirculos();

    }

    public void dibujarCirculo(Graphics g, int x, int y, String dato) {
        Font fuente = new Font("TimesRoman", Font.BOLD, 16);
        g.setFont(fuente);
        g.setColor(Color.red);
        g.fillOval(x, y, 35, 35);
        g.setColor(Color.BLACK);
        g.drawOval(x, y, 35, 35);
        g.setColor(Color.BLUE);
        g.drawString(dato, x + 10, y + 20);
    }

    public void dibujarArista(Graphics g, int inicioX, int inicioY, int destinoX, int destinoY, int peso, Color colorArista) {
        String dato = String.valueOf(peso);
        int distanciaVertical = destinoY - inicioY;
        int distanciaHorizontal = destinoX - inicioX;
        Font fuente = new Font("TimesRoman", Font.BOLD, 16);
        
        g.setColor(colorArista);
        g.setFont(fuente);
        g.drawLine(inicioX + 20, inicioY + 10, destinoX + 20, destinoY + 10);
        g.setColor(Color.YELLOW);
        g.drawString(dato, (distanciaHorizontal / 2) + inicioX + 20, (distanciaVertical / 2) + inicioY + 10);
    }

    public void mandarDibujarAristas() {
        ArrayList<Vertice> lista = metodo.vertices();
        for (int i = 0; i < lista.size(); i++) {
            ArrayList<Ruta> listDestinos = metodo.rutasHabilitadas(lista.get(i).getNombre());
            int inicioX = lista.get(i).getX();
            int inicioY = lista.get(i).getY();
            if (listDestinos != null) {
                for (int j = 0; j < listDestinos.size(); j++) {
                    int destinoX = listDestinos.get(j).getVertice().getX();
                    int destinoY = listDestinos.get(j).getVertice().getY();
                    int peso = listDestinos.get(j).getArista().getPeso();
                    
                    dibujarArista(panelGrafo.getGraphics(), inicioX, inicioY, destinoX, destinoY, peso,listDestinos.get(j).getArista().getColor());
                }
            }
        }
    }

    public void mandarDibujarCirculos() {
        ArrayList<Vertice> lista = metodo.vertices();
        for (int i = 0; i < lista.size(); i++) {
            String nombreVertice = lista.get(i).getNombre();
            int x = lista.get(i).getX();
            int y = lista.get(i).getY();
            dibujarCirculo(panelGrafo.getGraphics(), x, y, nombreVertice);
        }
    }

    public void cargarComboBox() {
        DefaultComboBoxModel mdlInicio = new DefaultComboBoxModel();
        DefaultComboBoxModel mdlFinal = new DefaultComboBoxModel();
        cb_verticeInicio.setModel(mdlInicio);
        cb_verticeFinal.setModel(mdlFinal);
        ArrayList<String> lista = metodo.mostrarListaVertices();
        for (int i = 0; i < lista.size(); i++) {
            String nombre = lista.get(i);
            mdlInicio.addElement(nombre);
            mdlFinal.addElement(nombre);
        }
    }

    public void crearVerticesInicio() {
        metodo.crearVertice("A", 203, 78);
        metodo.crearVertice("B", 203, 165);
        metodo.crearVertice("C", 203, 268);
        metodo.crearVertice("D", 203, 365);
        metodo.crearVertice("E", 312, 126);
        metodo.crearVertice("F", 312, 213);
        metodo.crearVertice("G", 312, 315);
        metodo.crearVertice("H", 398, 373);
        metodo.crearVertice("I", 398, 274);
        metodo.crearVertice("J", 398, 172);
        metodo.crearVertice("K", 398, 75);
        metodo.crearVertice("L", 476, 118);
        metodo.crearVertice("M", 476, 223);
        metodo.crearVertice("N", 476, 317);
        metodo.crearVertice("Ñ", 550, 68);
        metodo.crearVertice("O", 550, 173);
        metodo.crearVertice("P", 550, 277);
        metodo.crearVertice("Q", 550, 373);
        metodo.crearVertice("R", 656, 125);
        metodo.crearVertice("S", 656, 208);
        metodo.crearVertice("T", 656, 291);
        metodo.crearVertice("U", 656, 367);
        metodo.crearVertice("V", 758, 72);
        metodo.crearVertice("W", 758, 157);
        metodo.crearVertice("X", 758, 260);
        metodo.crearVertice("Y", 758, 347);
        metodo.crearVertice("Z", 849, 116);
        metodo.crearVertice("AA", 849, 205);
        metodo.crearVertice("AB", 849, 305);
    }

    public void crearAristasInicio() {
        metodo.crearArista("A", "B", 2);
        metodo.crearArista("A", "E", 4);
        metodo.crearArista("A", "K", 3);
        metodo.crearArista("B", "C", 2);
        metodo.crearArista("B", "F", 3);
        metodo.crearArista("C", "D", 5);
        metodo.crearArista("C", "G", 2);
        metodo.crearArista("D", "G", 7);
        metodo.crearArista("E", "J", 2);
        metodo.crearArista("E", "K", 3);
        metodo.crearArista("E", "B", 5);
        metodo.crearArista("F", "E", 2);
        metodo.crearArista("F", "J", 3);
        metodo.crearArista("F", "I", 5);
        metodo.crearArista("F", "G", 6);
        metodo.crearArista("F", "C", 4);
        metodo.crearArista("G", "I", 2);
        metodo.crearArista("G", "H", 4);
        metodo.crearArista("K", "Ñ", 2);
        metodo.crearArista("K", "L", 8);
        metodo.crearArista("K", "J", 4);
        metodo.crearArista("J", "L", 2);
        metodo.crearArista("J", "M", 7);
        metodo.crearArista("J", "I", 6);
        metodo.crearArista("I", "N", 2);
        metodo.crearArista("I", "H", 5);
        metodo.crearArista("H", "N", 2);
        metodo.crearArista("H", "D", 2);
        metodo.crearArista("L", "Ñ", 3);
        metodo.crearArista("L", "O", 4);
        metodo.crearArista("L", "M", 5);
        metodo.crearArista("M", "O", 2);
        metodo.crearArista("M", "P", 3);
        metodo.crearArista("M", "N", 4);
        metodo.crearArista("M", "I", 5);
        metodo.crearArista("N", "P", 3);
        metodo.crearArista("N", "Q", 4);
        metodo.crearArista("Ñ", "V", 2);
        metodo.crearArista("Ñ", "R", 4);
        metodo.crearArista("Ñ", "O", 2);
        metodo.crearArista("O", "R", 2);
        metodo.crearArista("O", "S", 3);
        metodo.crearArista("O", "P", 4);
        metodo.crearArista("P", "T", 5);
        metodo.crearArista("P", "S", 4);
        metodo.crearArista("P", "Q", 3);
        metodo.crearArista("Q", "H", 2);
        metodo.crearArista("Q", "T", 3);
        metodo.crearArista("R", "V", 7);
        metodo.crearArista("R", "W", 8);
        metodo.crearArista("R", "S", 9);
        metodo.crearArista("S", "X", 2);
        metodo.crearArista("S", "T", 5);
        metodo.crearArista("T", "X", 2);
        metodo.crearArista("T", "U", 3);
        metodo.crearArista("U", "Q", 3);
        metodo.crearArista("V", "Z", 3);
        metodo.crearArista("V", "W", 4);
        metodo.crearArista("W", "AA", 3);
        metodo.crearArista("W", "X", 2);
        metodo.crearArista("W", "S", 5);
        metodo.crearArista("X", "AB", 3);
        metodo.crearArista("X", "Y", 2);
        metodo.crearArista("Y", "T", 5);
        metodo.crearArista("Y", "U", 3);
        metodo.crearArista("Z", "W", 2);
        metodo.crearArista("Z", "AA", 2);
        metodo.crearArista("AA", "X", 2);
        metodo.crearArista("AB", "AA", 5);
        metodo.crearArista("AB", "Y", 2);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_deleteArista;
    private javax.swing.JButton bt_deleteVertice;
    private javax.swing.JButton bt_updateArista;
    private javax.swing.JButton bt_updateVertice;
    private javax.swing.JComboBox cb_verticeFinal;
    private javax.swing.JComboBox cb_verticeInicio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTf_ejeX;
    private javax.swing.JTextField jTf_ejeY;
    private javax.swing.JButton jb_buscarRuta;
    private javax.swing.JButton jb_cargarGrafo;
    private javax.swing.JToggleButton jb_nuevaArista;
    private javax.swing.JToggleButton jb_nuevoVertice;
    private javax.swing.JLabel panelGrafo;
    // End of variables declaration//GEN-END:variables
}
